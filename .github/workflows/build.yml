name: Build V8

on:
  release:
    types: [published]

permissions: write-all

jobs:
  build_gnu_linux:
    strategy:
      matrix:
        platform: [android-armv7, android-arm64, android-x64, android-x86, linux-x64]
    name: ${{ matrix.platform }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        chmod +x ./build.sh
        _args="${{github.event.release.tag_name}} $GITHUB_WORKSPACE ${{ matrix.platform }}"
        if [ ${{ matrix.platform }} = "android-armv7" ]; then
        _args+=" android arm.release arm"
        fi
        if [ ${{ matrix.platform }} = "android-arm64" ]; then
        _args+=" android arm64.release arm64"
        fi
        if [ ${{ matrix.platform }} = "android-x64" ]; then
        _args+=" android x64.release x64"
        fi
        if [ ${{ matrix.platform }} = "android-x86" ]; then
        _args+=" android ia32.release x86"
        fi
        if [ ${{ matrix.platform }} = "linux-x64" ]; then
        _args+=" linux x64.release x64"
        fi
        bash ./build.sh $_args
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./v8_monolith_${{ matrix.platform }}.zip
        asset_name: v8_monolith_${{ matrix.platform }}.zip
        asset_content_type: application/zip

  build_windows:
    strategy:
      matrix:
        platform: [windows-x64]
    name: ${{ matrix.platform }}
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run build script
      env:
        DEPOT_TOOLS_WIN_TOOLCHAIN: 0
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE
        _args="${{github.event.release.tag_name}} $GITHUB_WORKSPACE ${{ matrix.platform }}"
        if [ ${{ matrix.platform }} = "windows-x64" ]; then
        _args+=" win x64.release x64"
        fi
        bash ./build.sh $_args
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: v8_monolith_${{ matrix.platform }}.zip
        asset_name: v8_monolith_${{ matrix.platform }}.zip
        asset_content_type: application/zip
  
  build_mac:
    strategy:
      matrix:
        platform: [mac-x64]
    name: ${{ matrix.platform }}
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run build script
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE
        chmod +x ./build.sh
        _args="${{github.event.release.tag_name}} $GITHUB_WORKSPACE ${{ matrix.platform }}"
        if [ ${{ matrix.platform }} = "mac-x64" ]; then
        _args+=" mac x64.release x64"
        fi
        bash ./build.sh $_args
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./v8_monolith_${{ matrix.platform }}.zip
        asset_name: v8_monolith_${{ matrix.platform }}.zip
        asset_content_type: application/zip
