name: Build V8

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name'
        required: true
      os:
        required: true
        type: choice
        default: 'mac'
        options:
        - mac
        - linux
        - windows
      platform:
        required: true
        type: choice
        default: 'mac-arm64'
        options:
        - mac-arm64
        - mac-x64

permissions: write-all

jobs:
  build_gnu_linux:
    if: github.event.inputs.os == 'linux'
    strategy:
      matrix:
        platform: [android-armv7, android-arm64, android-x64, android-x86, linux-armv7, linux-arm64, linux-x86, linux-x64]
    name: build_gnu_linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run build script
      run: |
        cd $GITHUB_WORKSPACE
        chmod +x ./build.sh
        _args="${{github.event.inputs.tag_name}} $GITHUB_WORKSPACE ${{ github.event.inputs.platform }}"
        if [ ${{ github.event.inputs.platform }} = "android-armv7" ]; then
        _args+=" android arm.release arm"
        fi
        if [ ${{ github.event.inputs.platform }} = "android-arm64" ]; then
        _args+=" android arm64.release arm64"
        fi
        if [ ${{ github.event.inputs.platform }} = "android-x64" ]; then
        _args+=" android x64.release x64"
        fi
        if [ ${{ github.event.inputs.platform }} = "android-x86" ]; then
        _args+=" android ia32.release x86"
        fi
        if [ ${{ github.event.inputs.platform }} = "linux-armv7" ]; then
        _args+=" linux arm.release arm"
        fi
        if [ ${{ github.event.inputs.platform }} = "linux-arm64" ]; then
        _args+=" linux arm64.release arm64"
        fi
        if [ ${{ github.event.inputs.platform }} = "linux-x86" ]; then
        _args+=" linux ia32.release x86"
        fi
        if [ ${{ github.event.inputs.platform }} = "linux-x64" ]; then
        _args+=" linux x64.release x64"
        fi
        bash ./build.sh $_args
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./v8_${{ github.event.inputs.platform }}.zip
        asset_name: v8_${{ github.event.inputs.platform }}.zip
        asset_content_type: application/zip

  build_windows:
    if: github.event.inputs.os == 'windows'
    strategy:
      matrix:
        platform: [windows-x64, windows-x86, windows-arm64]
    name: build_windows
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run build script
      env:
        DEPOT_TOOLS_WIN_TOOLCHAIN: 0
      shell: bash
      run: |
        cd $GITHUB_WORKSPACE
        _args="${{github.event.inputs.tag_name}} $GITHUB_WORKSPACE ${{ github.event.inputs.platform }}"
        if [ ${{ github.event.inputs.platform }} = "windows-x64" ]; then
        _args+=" win x64.release x64"
        fi
        if [ ${{ github.event.inputs.platform }} = "windows-x86" ]; then
        _args+=" win ia32.release x86"
        fi
        if [ ${{ github.event.inputs.platform }} = "windows-arm64" ]; then
        _args+=" win arm64.release arm64"
        fi
        bash ./build.sh $_args
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: v8_${{ github.event.inputs.platform }}.zip
        asset_name: v8_${{ github.event.inputs.platform }}.zip
        asset_content_type: application/zip
  
  build_mac:
    if: github.event.inputs.os == 'mac'
    name: build_mac
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build (x64)
      shell: bash
      run: |
        if [ ${{ github.event.inputs.platform }} = "mac-x64" ]; then
          cd $GITHUB_WORKSPACE
          chmod +x ./build.sh
          _args="${{ github.event.inputs.tag_name }} $GITHUB_WORKSPACE ${{ github.event.inputs.platform }}"
          _args+=" mac x64.release x64 nomonolith"
          bash ./build.sh "$_args"
        fi
    - name: Build (arm64)
      shell: bash
      run: |
        if [ ${{ github.event.inputs.platform }} = "mac-arm64" ]; then
          cd $GITHUB_WORKSPACE
          chmod +x ./build.sh
          _args="${{ github.event.inputs.tag_name }} $GITHUB_WORKSPACE ${{ github.event.inputs.platform }}"
          _args+=" mac arm64.release arm64 nomonolith"
          bash ./build.sh "$_args"
        fi
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./v8_${{ github.event.inputs.platform }}.zip
        asset_name: v8_${{ github.event.inputs.platform }}.zip
        asset_content_type: application/zip
